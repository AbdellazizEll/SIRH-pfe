
services:
  mysql-db:
    image: mysql:8.0
    #container_name: mysql-db
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_DATABASE: lastDB
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./db_init:/docker-entrypoint-initdb.d

    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
  spring-app:
    build:
      context: ./sirh-backend          # Updated build context
      dockerfile: Dockerfile
    #container_name: spring-app
    ports:
      - "8085:8085"
    depends_on:
      - mysql-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/lastDB
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
      # Email configuration
      SPRING_MAIL_HOST: sandbox.smtp.mailtrap.io
      SPRING_MAIL_PORT: 2525
      SPRING_MAIL_USERNAME: 2af9054796aa31
      SPRING_MAIL_PASSWORD: ad83f9b9e46281
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
      # Other configurations
      ACTIVATION_URL: http://localhost:8085/api/v1/auth/activate-account
      TOKEN_EXPIRATION_MINUTES: 360
    volumes:
      - uploads:/app/uploads/justificatifs
    networks:
      - app-network
  frontend:
    build:
      context: ./sirh-frontend         # Updated build context
      dockerfile: Dockerfile
   # container_name: frontend
    ports:
      - "3000:80"                      # Map port 80 in the container to port 3000 on the host
    depends_on:
      - spring-app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  uploads:
